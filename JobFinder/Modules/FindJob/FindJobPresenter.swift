//
//  FindJobPresenter.swift
//  JobFinder
//
//  Created Ali Omari on 4/4/19.
//  Copyright © 2019 Ali Omari. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class FindJobPresenter: FindJobPresenterProtocol {
    
    weak private var view: FindJobViewProtocol?
    var interactor: FindJobInteractorProtocol?
    private let router: FindJobWireframeProtocol

    private var position:String?
    private var lat:Double?
    private var lng:Double?
    
    init(interface: FindJobViewProtocol, interactor: FindJobInteractorProtocol?, router: FindJobWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }

    private func changeSearchButtonState(){
        let isSearchEnabled = position != nil && position != ""
        view?.changeSearchButtonState(isEnabled: isSearchEnabled)
    }
    
    func viewDidLoad() {
        changeSearchButtonState()
    }
    
    func jobPositionDidChanged(text: String?) {
        self.position = text
        changeSearchButtonState()
    }
    
    func jobLocationDidChanged(lat: Double?, lng: Double?) {
        self.lat = lat
        self.lng = lng
        changeSearchButtonState()
    }
    
    func providerDidSelectAtIndex(index: Int) {
        DataManager.shared.selectedProvider = DataManager.shared.providers![index]
    }
    
    func searchButtonDidPressed() {
        view?.showLoadingIndicator()
        interactor?.searchJob(position: position!, lat: lat, lng: lng)
    }
    
    func searchDidCompleted(jobs: [Job]) {
        view?.hideLoadingIndicator()
        if jobs.count == 0 {
            view?.showMessage(title: R.string.localizable.ops_title(), message: R.string.localizable.no_jobs_found())
            return
        }
        router.goToJobsViewController(jobs: jobs, position: position!, lat: lat, lng: lng)
    }
    
    func searchDidFailed(error: String) {
        view?.hideLoadingIndicator()
        view?.showMessage(title: R.string.localizable.error_title(), message: error)
    }
}
