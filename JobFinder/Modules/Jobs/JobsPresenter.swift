//
//  JobsPresenter.swift
//  JobFinder
//
//  Created Ali Omari on 4/4/19.
//  Copyright © 2019 Ali Omari. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class JobsPresenter: JobsPresenterProtocol {
    
    var jobs: [Job]!
    var position: String!
    var lat: Double?
    var lng: Double?
    
    weak private var view: JobsViewProtocol?
    var interactor: JobsInteractorProtocol?
    private let router: JobsWireframeProtocol
    
    private var pageNumber = 0
    private var allDataLoaded = false
    
    init(interface: JobsViewProtocol, interactor: JobsInteractorProtocol?, router: JobsWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }

    private func loadMore() {
        pageNumber += 1
        interactor?.searchJob(position: position, lat: lat, lng: lng, pageNumber: pageNumber)
    }
    
    func viewDidLoad() {
        view?.populate()
    }
    
    func didClickOnJob(job: Job) {
        if let url = URL(string: job.url ?? "") {
            UIApplication.shared.open(url, options: [:])
            return
        }
        view?.showMessage(title: R.string.localizable.error_title(), message: R.string.localizable.error_open_url_desc())
    }
    
    func didDisplayDataAt(index: Int) {
        if index != jobs.count - 1 || allDataLoaded{
            return
        }
        loadMore()
        view?.changeActivityIndicatorVisibility(isHidden: false)
    }
    
    func searchDidCompleted(jobs: [Job]) {
        view?.hideLoadingIndicator()
        if jobs.count == 0{
            allDataLoaded = true
            return
        }
        self.jobs.append(contentsOf: jobs)
        view?.populate()
        view?.changeActivityIndicatorVisibility(isHidden: true)
    }
    
    func searchDidFailed(error: String) {
        view?.hideLoadingIndicator()
        view?.showMessage(title: R.string.localizable.error_title(), message: error)
    }
}
